{"remainingRequest":"/Users/youngseolee/Desktop/squid_game/node_modules/babel-loader/lib/index.js!/Users/youngseolee/Desktop/squid_game/src/components/ranking_components/ranking.js","dependencies":[{"path":"/Users/youngseolee/Desktop/squid_game/src/components/ranking_components/ranking.js","mtime":1638593510000},{"path":"/Users/youngseolee/Desktop/squid_game/babel.config.js","mtime":1638321622000},{"path":"/Users/youngseolee/Desktop/squid_game/node_modules/cache-loader/dist/cjs.js","mtime":1660627976377},{"path":"/Users/youngseolee/Desktop/squid_game/node_modules/babel-loader/lib/index.js","mtime":1660627977566}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmVudHJpZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZS5qcyI7CmltcG9ydCB7IHNxdWlkRGF0YWJhc2UgfSBmcm9tICIuLi8uLi9kYXRhc291cmNlcy9maXJlYmFzZSI7CnZhciBnU3RhdHVzID0gW2ZhbHNlLCBmYWxzZSwgZmFsc2VdOwp2YXIgY3VycmVudFNjb3JlID0gMDsgLy8gZ2FtZSBwYWdl7JeQ7IScIHJhbmtpbmfsnLzroZwg64SY7Ja06rCIIOuVjCDsnbTsmqkKCmZ1bmN0aW9uIGRldGVjdEdhbWUocHV6emxlR2FtZVN0YXR1cywgdXBEb3duR2FtZVN0YXR1cywgTXVrQ2hpUGFHYW1lU3RhdHVzKSB7CiAgZ1N0YXR1c1swXSA9IHB1enpsZUdhbWVTdGF0dXM7CiAgZ1N0YXR1c1sxXSA9IHVwRG93bkdhbWVTdGF0dXM7CiAgZ1N0YXR1c1syXSA9IE11a0NoaVBhR2FtZVN0YXR1czsKfSAvLyBvbmxpbmUudmVyIOq4sOuhnQoKCmZ1bmN0aW9uIHJlY29yZE5ld1JhbmsoZ2FtZSwgdXNlcklkLCBuYW1lLCBzY29yZSkgewogIGN1cnJlbnRTY29yZSA9IHNjb3JlOwogIHNxdWlkRGF0YWJhc2UucmVmKGdhbWUgKyAnLycgKyB1c2VySWQpLm9uKCd2YWx1ZScsIGZ1bmN0aW9uIChzbmFwc2hvdCkgewogICAgdmFyIHVzZXJSZWNvcmREYXRhID0gc25hcHNob3QudmFsKCk7CgogICAgaWYgKHVzZXJSZWNvcmREYXRhID09PSBudWxsIHx8IHVzZXJSZWNvcmREYXRhLnVzZXJfc2NvcmUgPCBzY29yZSkgewogICAgICBzcXVpZERhdGFiYXNlLnJlZihnYW1lICsgJy8nICsgdXNlcklkKS5zZXQoewogICAgICAgIHVzZXJfbmFtZTogbmFtZSwKICAgICAgICB1c2VyX3Njb3JlOiBzY29yZQogICAgICB9KTsKICAgIH0KICB9KTsKfSAvLyBvZmZsaW5lIHZlci4g6riw66GdCgoKZnVuY3Rpb24gcmVjb3JkQ3VycmVudFNjb3JlKHNjb3JlKSB7CiAgY3VycmVudFNjb3JlID0gc2NvcmU7Cn0gLy8gdXNlcl9zY29yZSDqsJLsnYQg6riw7KSAKOyYpOumhOywqOyInCBvciDrgrTrprzssKjsiJwp7Jy866GcIHJhbmtpbmcgZGF0YSDsg53shLEKCgpmdW5jdGlvbiBtYWtlR2FtZVJhbmtpbmcoZ2FtZSkgewogIHZhciBnYW1lUmFua2luZyA9IFtdOwogIHNxdWlkRGF0YWJhc2UucmVmKGdhbWUgKyAnLycpLm9yZGVyQnlDaGlsZCgndXNlcl9zY29yZScpLm9uKCdjaGlsZF9hZGRlZCcsIGZ1bmN0aW9uIChzbmFwc2hvdCkgewogICAgLy8gT2JqZWN0LmVudHJpZXMo6rCd7LK0KSA6IOqwneyytOulvCDrsLDsl7TroZwg67OA7ZmYCiAgICB2YXIgdXNlclJlY29yZEFycjIgPSBPYmplY3QuZW50cmllcyhzbmFwc2hvdC52YWwoKSk7IC8vIDLssKjsm5AKCiAgICB2YXIgdXNlclJlY29yZEFycjEgPSB1c2VyUmVjb3JkQXJyMlswXS5jb25jYXQodXNlclJlY29yZEFycjJbMV0pOyAvLyAx7LCo7JuQCgogICAgZ2FtZSA9PT0gJ3B1enpsZV9nYW1lJyA/IGdhbWVSYW5raW5nLnB1c2godXNlclJlY29yZEFycjEpIDogZ2FtZVJhbmtpbmcudW5zaGlmdCh1c2VyUmVjb3JkQXJyMSk7IC8vIOyYpOumhOywqOyInCDsiJzsnITrqbQg7JWe7Jy866GcIOyMk+q4sCAodW5zaGlmdCkgPT4gdXBEb3duLCBNdWtjaGlwYQogICAgLy8g64K066a87LCo7IicIOyInOychOuptCDrkqTroZwg7IyT6riwIChwdXNoKSA9PiBwdXp6bGUKICB9KTsKICByZXR1cm4gZ2FtZVJhbmtpbmc7Cn0gLy8gcmFua2luZ+yXkCBtZWRhbCjsiJzsnIQpIOy2lOqwgAoKCmZ1bmN0aW9uIGFkZE1lZGFsVG9SYW5raW5nKHJhbmtpbmcpIHsKICAvLyBtZWRhbCjsiJzsnIQpW2luZGV4OiAwXSDstpTqsIAKICAvLyB1c2VyUmVjb3JkLCB1c2VyX3Njb3JlIOyggOyepQogIHZhciBudW1PZkVxdWFsID0gMDsgLy8g66qH66qF7J20IOuPmeygkOyduOyngAoKICB2YXIgbWVkYWwgPSAxOwogIHJhbmtpbmdbMF0udW5zaGlmdCgxKTsKICBjb25zb2xlLmxvZyhyYW5raW5nKTsKCiAgZm9yICh2YXIgaSA9IDE7IGkgPCByYW5raW5nLmxlbmd0aDsgaSsrKSB7CiAgICBpZiAocmFua2luZ1tpXVszXSA9PT0gcmFua2luZ1tpIC0gMV1bNF0pIHsKICAgICAgLy8gcmFua2luZ1tpXVszXSA6IHVzZXJfc2NvcmUsIHJhbmtpbmdbaS0xXVs0XSA6IHByZXZpb3VzX3VzZXJfc2NvcmUKICAgICAgLy8g7KaJLCDrj5nsoJDsnbgg7IOB7ZmpCiAgICAgIG51bU9mRXF1YWwrKzsKICAgICAgcmFua2luZ1tpXS51bnNoaWZ0KG1lZGFsKTsKICAgIH0gZWxzZSB7CiAgICAgIC8vIOygkOyImOqwgCDri6zrnbzsp5AKICAgICAgbWVkYWwgPSBtZWRhbCArIChudW1PZkVxdWFsICsgMSk7CiAgICAgIHJhbmtpbmdbaV0udW5zaGlmdChtZWRhbCk7CiAgICAgIG51bU9mRXF1YWwgPSAwOwogICAgfQogIH0KCiAgcmV0dXJuIHJhbmtpbmc7Cn0gLy8g7IOB7JyEIDEw66qF66eMIOuCmOyXtAoKCmZ1bmN0aW9uIHNob3dSYW5raW5nVG9wMTAocmFua2luZykgewogIHZhciBzaG93UmFua2luZ0RhdGEgPSBbXTsKICBzaG93UmFua2luZ0RhdGEgPSByYW5raW5nLmxlbmd0aCA+IDEwID8gcmFua2luZy5zbGljZSgwLCAxMCkgOiByYW5raW5nLnNsaWNlKDAsIHJhbmtpbmcubGVuZ3RoKTsKICByZXR1cm4gc2hvd1JhbmtpbmdEYXRhOwp9IC8vIHVzZXIg7Iic7JyECgoKZnVuY3Rpb24gdXNlclJhbmsocmFua2luZywgbmFtZSkgewogIHZhciB1c2VyUmFuayA9IFtdOyAvLyB1c2VyUmFua1swXSA6IG1lZGFsLCB1c2VyUmFua1sxXSA6IHNjb3JlCgogIGZvciAodmFyIGkgPSAwOyBpIDwgcmFua2luZy5sZW5ndGg7IGkrKykgewogICAgaWYgKHJhbmtpbmdbaV1bMl0gPT09IG5hbWUpIHsKICAgICAgdXNlclJhbmsucHVzaChyYW5raW5nW2ldWzBdKTsgLy8gbWVkYWwKCiAgICAgIHVzZXJSYW5rLnB1c2gocmFua2luZ1tpXVs0XSk7IC8vIHNjb3JlCgogICAgICBicmVhazsKICAgIH0KICB9CgogIHJldHVybiB1c2VyUmFuazsKfQoKZXhwb3J0IHsgZGV0ZWN0R2FtZSwgcmVjb3JkTmV3UmFuaywgcmVjb3JkQ3VycmVudFNjb3JlLCBnU3RhdHVzLCBjdXJyZW50U2NvcmUsIG1ha2VHYW1lUmFua2luZywgYWRkTWVkYWxUb1JhbmtpbmcsIHNob3dSYW5raW5nVG9wMTAsIHVzZXJSYW5rIH07"},{"version":3,"sources":["/Users/youngseolee/Desktop/squid_game/src/components/ranking_components/ranking.js"],"names":["squidDatabase","gStatus","currentScore","detectGame","puzzleGameStatus","upDownGameStatus","MukChiPaGameStatus","recordNewRank","game","userId","name","score","ref","on","snapshot","userRecordData","val","user_score","set","user_name","recordCurrentScore","makeGameRanking","gameRanking","orderByChild","userRecordArr2","Object","entries","userRecordArr1","concat","push","unshift","addMedalToRanking","ranking","numOfEqual","medal","console","log","i","length","showRankingTop10","showRankingData","slice","userRank"],"mappings":"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","sourcesContent":["import { squidDatabase } from \"../../datasources/firebase\"; \r\n\r\nlet gStatus = [false, false, false];\r\nlet currentScore = 0;\r\n\r\n// game page에서 ranking으로 넘어갈 때 이용\r\nfunction detectGame(puzzleGameStatus, upDownGameStatus, MukChiPaGameStatus) {\r\n    gStatus[0] = puzzleGameStatus;\r\n    gStatus[1] = upDownGameStatus;\r\n    gStatus[2] = MukChiPaGameStatus;\r\n}\r\n\r\n// online.ver 기록\r\nfunction recordNewRank(game, userId, name, score) {\r\n    currentScore = score;\r\n    squidDatabase.ref(game + '/' + userId).on('value', (snapshot) => {\r\n        const userRecordData = snapshot.val();\r\n        if(userRecordData === null ||userRecordData.user_score < score){\r\n            squidDatabase.ref(game + '/' + userId).set({\r\n                user_name: name,\r\n                user_score: score,\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\n// offline ver. 기록\r\nfunction recordCurrentScore(score) {\r\n    currentScore = score;\r\n}\r\n\r\n// user_score 값을 기준(오름차순 or 내림차순)으로 ranking data 생성\r\nfunction makeGameRanking(game) {\r\n    let gameRanking = [];\r\n    squidDatabase.ref(game + '/').orderByChild('user_score').on('child_added', (snapshot) => {\r\n        // Object.entries(객체) : 객체를 배열로 변환\r\n        const userRecordArr2 = Object.entries(snapshot.val()); // 2차원\r\n        const userRecordArr1 = userRecordArr2[0].concat(userRecordArr2[1]); // 1차원\r\n        \r\n        game === 'puzzle_game' ? gameRanking.push(userRecordArr1) : gameRanking.unshift(userRecordArr1);\r\n        // 오름차순 순위면 앞으로 쌓기 (unshift) => upDown, Mukchipa\r\n        // 내림차순 순위면 뒤로 쌓기 (push) => puzzle\r\n    });\r\n    \r\n    return gameRanking;\r\n}\r\n\r\n// ranking에 medal(순위) 추가\r\nfunction addMedalToRanking(ranking) {\r\n    // medal(순위)[index: 0] 추가\r\n    // userRecord, user_score 저장\r\n    let numOfEqual = 0; // 몇명이 동점인지\r\n    let medal = 1;\r\n    ranking[0].unshift(1);\r\n    console.log(ranking);\r\n    for(let i=1; i<ranking.length; i++){\r\n        if(ranking[i][3] === ranking[i-1][4]){\r\n            // ranking[i][3] : user_score, ranking[i-1][4] : previous_user_score\r\n            // 즉, 동점인 상황\r\n            numOfEqual++;\r\n            ranking[i].unshift(medal);\r\n        } else {\r\n            // 점수가 달라짐\r\n            medal = medal + ( numOfEqual + 1 );\r\n            ranking[i].unshift(medal);\r\n            numOfEqual = 0;\r\n        }\r\n    }\r\n    \r\n    return ranking;\r\n}\r\n\r\n// 상위 10명만 나열\r\nfunction showRankingTop10(ranking) {\r\n    let showRankingData = [];\r\n    showRankingData = ranking.length > 10 ? ranking.slice(0, 10) : ranking.slice(0, ranking.length);\r\n\r\n    return showRankingData;\r\n}\r\n\r\n// user 순위\r\nfunction userRank(ranking, name) {\r\n    let userRank = []; // userRank[0] : medal, userRank[1] : score\r\n    for(let i=0; i<ranking.length; i++){\r\n        if(ranking[i][2] === name){\r\n            userRank.push(ranking[i][0]); // medal\r\n            userRank.push(ranking[i][4]); // score\r\n            break;\r\n        }\r\n    }\r\n\r\n    return userRank;\r\n}\r\n\r\nexport { detectGame, recordNewRank, recordCurrentScore, gStatus, currentScore, \r\n    makeGameRanking, addMedalToRanking, showRankingTop10, userRank };"]}]}