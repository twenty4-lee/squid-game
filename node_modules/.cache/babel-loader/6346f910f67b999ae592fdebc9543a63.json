{"remainingRequest":"/Users/youngseolee/Desktop/squid_game/node_modules/babel-loader/lib/index.js!/Users/youngseolee/Desktop/squid_game/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/youngseolee/Desktop/squid_game/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/youngseolee/Desktop/squid_game/src/components/game_components/Updown_game.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/youngseolee/Desktop/squid_game/src/components/game_components/Updown_game.vue","mtime":1638677386000},{"path":"/Users/youngseolee/Desktop/squid_game/babel.config.js","mtime":1638321622000},{"path":"/Users/youngseolee/Desktop/squid_game/node_modules/cache-loader/dist/cjs.js","mtime":1660627976377},{"path":"/Users/youngseolee/Desktop/squid_game/node_modules/babel-loader/lib/index.js","mtime":1660627977566},{"path":"/Users/youngseolee/Desktop/squid_game/node_modules/cache-loader/dist/cjs.js","mtime":1660627976377},{"path":"/Users/youngseolee/Desktop/squid_game/node_modules/vue-loader/lib/index.js","mtime":1660627977937}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Updown_game.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,OAAA,KAAA,IAAA,MAAA,+BAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GAAA,CADA;AACA;AACA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,KAAA,EAAA,EAHA;AAIA,MAAA,MAAA,EAAA,EAJA;AAKA,MAAA,EAAA,EAAA,EALA;AAMA,MAAA,IAAA,EAAA,CANA;AAMA;AACA,MAAA,KAAA,EAAA,GAPA;AAOA;AACA,MAAA,KAAA,EAAA,IARA;AASA,MAAA,SAAA,EAAA,EATA;AAUA,MAAA,WAAA,EAAA,KAVA;AAWA,MAAA,SAAA,EAAA,iCAXA;AAWA;AACA,MAAA,MAAA,EAAA,OAAA,CAAA,8CAAA,CAZA;AAaA,MAAA,IAAA,EAAA,OAAA,CAAA,0CAAA;AAbA,KAAA;AAeA,GAjBA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,UAAA,EAAA,sBAAA;AAAA;;AACA,WAAA,KAAA,GAAA,WAAA,CAAA;AAAA,eAAA,KAAA,CAAA,SAAA,EAAA;AAAA,OAAA,EAAA,IAAA,CAAA;AACA,WAAA,WAAA,GAAA,IAAA;AACA,WAAA,SAAA;AACA,KALA;AAMA,IAAA,SAAA,EAAA,qBAAA;AACA,MAAA,aAAA,CAAA,KAAA,KAAA,CAAA;AACA,WAAA,KAAA,GAAA,IAAA;AACA,WAAA,WAAA,GAAA,IAAA;AACA,WAAA,SAAA,GAAA,oDAAA;AACA,KAXA;AAYA,IAAA,UAAA,EAAA,sBAAA;AACA,WAAA,MAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GAAA,CAAA;AACA,WAAA,KAAA,GAAA,GAAA;AACA,WAAA,IAAA,GAAA,CAAA;AACA,WAAA,KAAA,GAAA,EAAA;AACA,WAAA,KAAA,GAAA,EAAA;AACA,WAAA,EAAA,GAAA,CAAA;AACA,WAAA,SAAA,GAAA,IAAA,EAAA;AACA,MAAA,aAAA,CAAA,KAAA,KAAA,CAAA;AACA,WAAA,KAAA,GAAA,IAAA;AACA,WAAA,WAAA,GAAA,KAAA;AACA,WAAA,SAAA;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,KAAA;AACA,KAzBA;AA2BA,IAAA,SAAA,EAAA,qBAAA;AACA,UAAA,KAAA,SAAA,IAAA,CAAA,EAAA;AACA,aAAA,SAAA;AACA,OAFA,MAEA;AACA,QAAA,KAAA,cAAA,CADA,CAEA;;AACA,YAAA,KAAA,eAAA,EAAA;AACA,UAAA,IAAA,CAAA,aAAA,CAAA,aAAA,EAAA,KAAA,SAAA,CAAA,EAAA,EAAA,KAAA,SAAA,CAAA,IAAA,EAAA,CAAA;AACA,SAFA,MAEA;AACA,UAAA,IAAA,CAAA,kBAAA,CAAA,IAAA;AACA;;AACA,QAAA,aAAA,CAAA,KAAA,KAAA,CAAA;AACA,QAAA,IAAA,CAAA,UAAA,CAAA,KAAA,EAAA,IAAA,EAAA,KAAA;AACA,aAAA,OAAA,CAAA,IAAA,CAAA,cAAA;AAEA,aAAA,MAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GAAA,CAAA;AACA,aAAA,KAAA,GAAA,GAAA;AACA,aAAA,IAAA,GAAA,CAAA;AACA,aAAA,KAAA,GAAA,EAAA;AACA,aAAA,KAAA,GAAA,EAAA;AACA,aAAA,EAAA,GAAA,CAAA;AACA,aAAA,SAAA,GAAA,EAAA;AACA,aAAA,KAAA,GAAA,IAAA;AACA,aAAA,WAAA,GAAA,KAAA;AACA,aAAA,SAAA;AACA,aAAA,KAAA,CAAA,MAAA,CAAA,KAAA;AACA;AACA,KAtDA;AAwDA,IAAA,YAxDA,wBAwDA,CAxDA,EAwDA;AACA,MAAA,CAAA,CAAA,cAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,MAAA;AACA,UAAA,IAAA,GAAA,CAAA;;AAEA,UAAA,KAAA,IAAA,IAAA,CAAA,EAAA;AAAA;AACA,QAAA,KAAA,sDAAA,KAAA,MAAA,EAAA,CADA,CAEA;;AACA,YAAA,KAAA,eAAA,EAAA;AACA,UAAA,IAAA,CAAA,aAAA,CAAA,aAAA,EAAA,KAAA,SAAA,CAAA,EAAA,EAAA,KAAA,SAAA,CAAA,IAAA,EAAA,CAAA;AACA,SAFA,MAEA;AACA,UAAA,IAAA,CAAA,kBAAA,CAAA,IAAA;AACA;;AACA,QAAA,aAAA,CAAA,KAAA,KAAA,CAAA;AACA,QAAA,IAAA,CAAA,UAAA,CAAA,KAAA,EAAA,IAAA,EAAA,KAAA;AACA,aAAA,OAAA,CAAA,IAAA,CAAA,cAAA;AAEA,aAAA,MAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GAAA,CAAA;AACA,aAAA,KAAA,GAAA,GAAA;AACA,aAAA,IAAA,GAAA,CAAA;AACA,aAAA,KAAA,GAAA,EAAA;AACA,aAAA,KAAA,GAAA,EAAA;AACA,aAAA,EAAA,GAAA,CAAA;AACA,aAAA,SAAA,GAAA,EAAA;AACA,aAAA,KAAA,GAAA,IAAA;AACA,aAAA,WAAA,GAAA,KAAA;AACA,aAAA,SAAA;AACA,aAAA,KAAA,CAAA,MAAA,CAAA,KAAA;AACA;;AACA,UAAA,KAAA,KAAA,IAAA,KAAA,MAAA,EAAA;AAAA;AACA,QAAA,IAAA,GAAA,KAAA,KAAA,GAAA,KAAA,SAAA;AACA,aAAA,KAAA,CAAA,IAAA,CAAA;AACA,UAAA,GAAA,EAAA,KAAA,KADA;AAEA,UAAA,MAAA,mCAAA,IAAA,CAFA;AAGA,UAAA,EAAA,EAAA,KAAA,EAAA;AAHA,SAAA,EAFA,CAOA;;AACA,QAAA,KAAA,mCAAA,KAAA,SAAA,8BAAA,IAAA,EAAA,CARA,CASA;;AACA,YAAA,KAAA,eAAA,EAAA;AACA,UAAA,IAAA,CAAA,aAAA,CAAA,aAAA,EAAA,KAAA,SAAA,CAAA,EAAA,EAAA,KAAA,SAAA,CAAA,IAAA,EAAA,IAAA;AACA,SAFA,MAEA;AACA,UAAA,IAAA,CAAA,kBAAA,CAAA,IAAA;AACA;;AACA,QAAA,aAAA,CAAA,KAAA,KAAA,CAAA;AACA,QAAA,IAAA,CAAA,UAAA,CAAA,KAAA,EAAA,IAAA,EAAA,KAAA;AACA,aAAA,OAAA,CAAA,IAAA,CAAA,cAAA;AAEA,aAAA,MAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GAAA,CAAA;AACA,aAAA,KAAA,GAAA,GAAA;AACA,aAAA,IAAA,GAAA,CAAA;AACA,aAAA,KAAA,GAAA,EAAA;AACA,aAAA,KAAA,GAAA,EAAA;AACA,aAAA,EAAA,GAAA,CAAA;AACA,aAAA,SAAA,GAAA,EAAA;AACA,aAAA,KAAA,GAAA,IAAA;AACA,aAAA,WAAA,GAAA,KAAA;AACA,aAAA,SAAA;AACA,aAAA,KAAA,CAAA,MAAA,CAAA,KAAA;AACA;;AACA,UAAA,KAAA,KAAA,IAAA,EAAA,EAAA;AAAA;AACA,aAAA,KAAA,CAAA,IAAA,CAAA;AACA,UAAA,GAAA,EAAA,KAAA,KADA;AAEA,UAAA,MAAA,wDAAA,KAAA,KAAA,CAFA;AAGA,UAAA,EAAA,EAAA,KAAA,EAAA;AAHA,SAAA;AAKA,OANA,MAMA;AAAA;AACA,YAAA,KAAA,KAAA,GAAA,KAAA,MAAA,EAAA;AAAA;AACA,eAAA,KAAA,IAAA,EAAA;AACA,eAAA,IAAA;AACA,UAAA,IAAA,GAAA,KAAA,KAAA;AACA,eAAA,KAAA,CAAA,IAAA,CAAA;AACA,YAAA,GAAA,EAAA,KAAA,KADA;AAEA,YAAA,MAAA,YAAA,KAAA,KAAA,0CAAA,IAAA,CAFA;AAGA,YAAA,EAAA,EAAA,KAAA,EAAA;AAHA,WAAA;AAKA,eAAA,KAAA,GAAA,EAAA;AACA,eAAA,KAAA,CAAA,MAAA,CAAA,KAAA;AACA;;AACA,YAAA,KAAA,KAAA,GAAA,KAAA,MAAA,EAAA;AAAA;AACA,eAAA,KAAA,IAAA,EAAA;AACA,eAAA,IAAA;AACA,UAAA,IAAA,GAAA,KAAA,KAAA;AACA,eAAA,KAAA,CAAA,IAAA,CAAA;AACA,YAAA,GAAA,EAAA,KAAA,KADA;AAEA,YAAA,MAAA,YAAA,KAAA,KAAA,wCAAA,IAAA,CAFA;AAGA,YAAA,EAAA,EAAA,KAAA,EAAA;AAHA,WAAA;AAKA,eAAA,KAAA,GAAA,EAAA;AACA,eAAA,KAAA,CAAA,MAAA,CAAA,KAAA;AACA;AACA;AAEA;AArJA,GAlBA;AAyKA,EAAA,QAAA,EAAA;AACA,IAAA,eADA,6BACA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,eAAA;AACA,KAHA;AAIA,IAAA,SAJA,uBAIA;AACA,UAAA,SAAA,GAAA,KAAA,MAAA,CAAA,OAAA,CAAA,SAAA;AACA,aAAA,SAAA;AACA;AAPA;AAzKA,CAAA","sourcesContent":["<template>\r\n    <div class=\"background\">\r\n        <v-container>\r\n            <img :src=\"logo\"\r\n            class=\"ForLogo\" />\r\n            <div class=\"row\">\r\n                <div class=\"small-6 columns text-center\">\r\n                    <div style=\"max-width:350px\">\r\n                        <img v-for=\"l in life\" v-bind:key=\"l.id\"\r\n                        :src=\"imgurl\"\r\n                        style=\"width: 20%\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button @click=\"stopTimer\" class=\"times\">Time stop</button>\r\n            <button @click=\"startTimer\" class=\"start\">Game start</button>\r\n            <button @click=\"resetTimer\" class=\"times\">Game reset</button>\r\n            <h2 class=\"bomb\">{{totalTime}}</h2> \r\n            <h4 id=\"state\">{{gameState}}</h4>\r\n            <h1>{{result}}</h1>\r\n            <form v-on:submit=\"onSubmitForm\">\r\n                <input ref=\"answer\" type=\"text\" id=\"enter\" maxlength=\"4\" v-model=\"value\" >\r\n                <button type=\"submit\" id=\"btn\" style=\"color: white\">Type</button>\r\n            </form>\r\n            <h3 style=\"margin-top: 20px; color: white\"> Tries </h3>\r\n            <div id=\"try\" style=\"color: white\">{{tries.length}}</div>\r\n            <ul>\r\n                <li v-for=\"t in tries\" v-bind:key=\"t.id\">\r\n                    <div id=\"bold\">{{t.try}}</div>\r\n                    <div>{{t.result}}</div>\r\n                </li>\r\n            </ul>\r\n        </v-container>\r\n    </div>\r\n</template>\r\n<script>\r\nimport * as rMod from \"../ranking_components/ranking\";\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            answer: Math.floor(Math.random()*100), // 0~100 range random number is generated\r\n            tries: [],\r\n            value: '',\r\n            result: '',\r\n            id: '',\r\n            life: 5, // initial chances\r\n            score: 100, // initial score is 100\r\n            timer: null,\r\n            totalTime: 60,\r\n            resetButton: false,\r\n            gameState: 'Click Game start button to play', //initial state before starting game\r\n            imgurl: require(\"./gameAssets/Updown/images/umbrella_gray.jpg\"),\r\n            logo: require(\"./gameAssets/Updown/images/logo_gray.jpg\")\r\n        }\r\n    },\r\n    methods: {\r\n        startTimer: function() {\r\n            this.timer = setInterval(() => this.countdown(), 1000);\r\n            this.resetButton = true;\r\n            this.gameState = `Game started. Type your forecast value`;\r\n            },\r\n        stopTimer: function() {\r\n            clearInterval(this.timer);\r\n            this.timer = null;\r\n            this.resetButton = true;\r\n            this.gameState = 'Game stopped. Click Game start button to resume it';\r\n            },\r\n        resetTimer: function() {\r\n            this.answer = Math.floor(Math.random()*100);\r\n            this.score = 100;\r\n            this.life = 5;\r\n            this.tries = [];\r\n            this.value = '';\r\n            this.id = 0;\r\n            this.totalTime = (1 * 60);\r\n            clearInterval(this.timer);\r\n            this.timer = null;\r\n            this.resetButton = false;\r\n            this.gameState = `Game reset. Click Game start button to play new game.`;\r\n            this.$refs.answer.focus();\r\n            },\r\n        \r\n        countdown: function() {\r\n            if(this.totalTime >= 1) {\r\n                this.totalTime--;\r\n            } else {\r\n                alert(`time over!`);\r\n                // ranking\r\n                if(this.fnGetAuthStatus) {\r\n                    rMod.recordNewRank('upDown_game', this.fnGetUser.id, this.fnGetUser.name, 0);\r\n                } else {\r\n                    rMod.recordCurrentScore(temp);\r\n                }\r\n                clearInterval(this.timer);\r\n                rMod.detectGame(false, true, false);\r\n                this.$router.push('/rankingPage');\r\n\r\n                this.answer = Math.floor(Math.random()*100);\r\n                this.score = 100;\r\n                this.life = 5;\r\n                this.tries = [];\r\n                this.value = '';\r\n                this.id = 0;\r\n                this.totalTime = 60;\r\n                this.timer = null;\r\n                this.resetButton = false;\r\n                this.gameState = `Game over. Click Game start button to replay`;\r\n                this.$refs.answer.focus();\r\n                }\r\n            },\r\n\r\n        onSubmitForm(e) {\r\n            e.preventDefault();\r\n            console.log(this.answer);\r\n            let temp = 0;\r\n\r\n            if (this.life == 0) { // game end, User lose\r\n                alert(`Game over! your score is 0, the answer was ${this.answer}`);\r\n                // ranking\r\n                if(this.fnGetAuthStatus) {\r\n                    rMod.recordNewRank('upDown_game', this.fnGetUser.id, this.fnGetUser.name, 0);\r\n                } else {\r\n                    rMod.recordCurrentScore(temp);\r\n                }\r\n                clearInterval(this.timer);\r\n                rMod.detectGame(false, true, false);\r\n                this.$router.push('/rankingPage');\r\n\r\n                this.answer = Math.floor(Math.random()*100);\r\n                this.score = 100;\r\n                this.life = 5;\r\n                this.tries = [];\r\n                this.value = '';\r\n                this.id = 0;\r\n                this.totalTime = 60;\r\n                this.timer = null;\r\n                this.resetButton = false;\r\n                this.gameState = `Game over. If you want replay, click Game start button`;\r\n                this.$refs.answer.focus();\r\n                }\r\n            if (this.value == this.answer) { //Correct answer, User win\r\n                temp = this.score + this.totalTime;\r\n                this.tries.push({\r\n                    try: this.value,\r\n                    result: `You win! your score is ${temp}`,\r\n                    id: this.id++\r\n                    });\r\n                //this.result = \"You win!\";\r\n                alert(`You win! Bonus score is ${this.totalTime}. Final score is ${temp}`);\r\n                // ranking\r\n                if(this.fnGetAuthStatus) {\r\n                    rMod.recordNewRank('upDown_game', this.fnGetUser.id, this.fnGetUser.name, temp);\r\n                } else {\r\n                    rMod.recordCurrentScore(temp);\r\n                }\r\n                clearInterval(this.timer);\r\n                rMod.detectGame(false, true, false);\r\n                this.$router.push('/rankingPage');\r\n\r\n                this.answer = Math.floor(Math.random()*100);\r\n                this.score = 100;\r\n                this.life = 5;\r\n                this.tries = [];\r\n                this.value = '';\r\n                this.id = 0;\r\n                this.totalTime = 60;\r\n                this.timer = null;\r\n                this.resetButton = false;\r\n                this.gameState = `You win. If you want replay, click Game start button`;\r\n                this.$refs.answer.focus();\r\n                } \r\n            if (this.value == '') { // No input. error message\r\n                this.tries.push({\r\n                    try: this.value,\r\n                    result: `No input! Type any number. Current score is ${this.score}`,\r\n                    id: this.id++\r\n                })\r\n            } else { // input is a number at least 0\r\n                if (this.value < this.answer) { //prediction is incorrect\r\n                    this.score -= 20;\r\n                    this.life --;\r\n                    temp=this.score;\r\n                    this.tries.push({\r\n                        try: this.value,\r\n                        result: `${this.value} is too small! your score is ${temp}`,\r\n                        id: this.id++,\r\n                        });\r\n                    this.value = '';\r\n                    this.$refs.answer.focus();\r\n                    }\r\n                if (this.value > this.answer) { // prediction is incorrect\r\n                    this.score -= 20;\r\n                    this.life--;\r\n                    temp=this.score;\r\n                    this.tries.push({\r\n                        try: this.value,\r\n                        result: `${this.value} is too big! your score is ${temp}`,\r\n                        id: this.id++,\r\n                        });\r\n                    this.value = '';\r\n                    this.$refs.answer.focus();\r\n                    }\r\n            }\r\n            \r\n        }\r\n    },\r\n    computed: {\r\n        fnGetAuthStatus() {\r\n            return this.$store.getters.fnGetAuthStatus\r\n        },\r\n        fnGetUser() {\r\n            let oUserInfo = this.$store.getters.fnGetUser;\r\n            return oUserInfo;\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import \"./gameCss/Updown_game.css\";\r\n</style>\r\n"],"sourceRoot":"src/components/game_components"}]}